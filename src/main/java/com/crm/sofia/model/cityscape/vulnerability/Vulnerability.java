package com.crm.sofia.model.cityscape.vulnerability;

import com.crm.sofia.model.cityscape.threat.AssetTypeGroup;
import com.crm.sofia.model.cityscape.threat.Threat;
import lombok.Data;
import lombok.experimental.Accessors;
import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;

import javax.persistence.*;
import java.time.Instant;
import java.util.List;

@Data
@Accessors(chain = true)
@DynamicUpdate
@DynamicInsert
@Table(name = "vulnerability")
@Entity(name = "Vulnerability")
public class Vulnerability {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false)
    private Long id;

    @Column(name = "created_by", length = 36)
    private String createdBy;

    @Column(name = "created_on", nullable = false)
    private Instant createdOn;

    @Column(name = "modified_by", length = 36)
    private String modifiedBy;

    @Column(name = "modified_on", nullable = false)
    private Instant modifiedOn;

    @Column(name = "short_order")
    private Long shortOrder;

    @Column(name = "version")
    private Long version;

    @Column(name = "code")
    private String code;

    @Column(name = "name", length = 500)
    private String name;

    @ManyToMany(fetch = FetchType.LAZY,cascade = {CascadeType.MERGE})
    @JoinTable(
            name = "threats_to_vulneralility",
            joinColumns = @JoinColumn(name = "vulnerability_id"),
            inverseJoinColumns = {
                    @JoinColumn(name = "threat_id", referencedColumnName = "id")
            }
    )
    private List<Threat> threats;

}
